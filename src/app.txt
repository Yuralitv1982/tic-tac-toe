–ò—Å–ø–æ–ª—å–∑—É–µ–º useState

gameTurns —Ö—Ä–∞–Ω–∏—Ç –≤—Å–µ —Å–¥–µ–ª–∞–Ω–Ω—ã–µ —Ö–æ–¥—ã.

activePlayer –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç, —á–µ–π —Ö–æ–¥ —Å–µ–π—á–∞—Å (X –∏–ª–∏ O).

handleSelectSquare() –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —Ö–æ–¥ –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –∏–≥—Ä–æ–∫–∞

–ö–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ –∫–ª–µ—Ç–∫—É, –æ–Ω–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ gameTurns.

–ó–∞—Ç–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∏–≥—Ä–æ–∫ (X –∏–ª–∏ O) –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–≥–æ.

–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã Player, GameBoard, Log

Player –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞.

GameBoard –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é handleSelectSquare.

Log –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å–¥–µ–ª–∞–Ω–Ω—ã–µ —Ö–æ–¥—ã.

üîπ 1. –ò–º–ø–æ—Ä—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
–í –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞ –º—ã –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ React-—Ö—É–∫–∏ –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:

jsx
import { useState, useEffect, useCallback } from 'react';
import GameBoard from './components/GameBoard';
import Player from './components/Player';
import Log from './components/Log';
‚úî useState ‚Üí —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏–≥—Ä—ã (—Ö–æ–¥—ã, –∞–∫—Ç–∏–≤–Ω—ã–π –∏–≥—Ä–æ–∫, –ø–æ–±–µ–¥–∏—Ç–µ–ª—å). ‚úî useEffect ‚Üí —Å–ª–µ–¥–∏—Ç –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º —Ö–æ–¥–æ–≤ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–±–µ–¥–∏—Ç–µ–ª—è. ‚úî useCallback ‚Üí –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ª–∏—à–Ω–∏–µ —Ä–µ—Ä–µ–Ω–¥–µ—Ä—ã, –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É—è checkWinner().

üîπ 2. –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è (useState)
jsx
const [gameTurns, setGameTurns] = useState([]);
const [activePlayer, setActivePlayer] = useState('X');
const [winner, setWinner] = useState(null);
const [playerNames, setPlayerNames] = useState({
   X: '–ò–≥—Ä–æ–∫ 1',
   O: '–ò–≥—Ä–æ–∫ 2',
});
‚úî gameTurns ‚Üí —Ö—Ä–∞–Ω–∏—Ç –∏—Å—Ç–æ—Ä–∏—é —Ö–æ–¥–æ–≤ (–≥–¥–µ –∏–≥—Ä–æ–∫ X –∏–ª–∏ O —Å–¥–µ–ª–∞–ª —Ö–æ–¥). ‚úî activePlayer ‚Üí –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —á–µ–π —Å–µ–π—á–∞—Å —Ö–æ–¥ (X –∏–ª–∏ O). ‚úî winner ‚Üí —Ö—Ä–∞–Ω–∏—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è (X, O –∏–ª–∏ –ù–∏—á—å—è). ‚úî playerNames ‚Üí —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–º–µ–Ω–∞ –∏–≥—Ä–æ–∫–æ–≤ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Ö –º–µ–Ω—è—Ç—å.

üîπ 3. –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∏–≥—Ä–æ–∫–∞
–ò–≥—Ä–æ–∫–∏ –º–æ–≥—É—Ç –º–µ–Ω—è—Ç—å —Å–≤–æ—ë –∏–º—è –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞:

jsx
function handleChangeName(player, newName) {
   setPlayerNames((prevNames) => ({ ...prevNames, [player]: newName }));
}
‚úî –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–º—è –∏–≥—Ä–æ–∫–∞ –≤ playerNames.

üîπ 4. –•–æ–¥ –∏–≥—Ä–æ–∫–∞ (handleSelectSquare)
–ö–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ –∫–ª–µ—Ç–∫—É, –∏–≥—Ä–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ö–æ–¥ –∏ –º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞:

jsx
function handleSelectSquare(rowIndex, colIndex) {
   if (winner) return; // –ï—Å–ª–∏ –∏–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å, –±–ª–æ–∫–∏—Ä—É–µ–º —Ö–æ–¥—ã

   setGameTurns((prevTurns) => [
      { square: { row: rowIndex, col: colIndex }, player: activePlayer },
      ...prevTurns,
   ]);

   setActivePlayer((prev) => (prev === 'X' ? 'O' : 'X')); // –ú–µ–Ω—è–µ–º –∏–≥—Ä–æ–∫–∞
}
‚úî –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ö–æ–¥ –≤ gameTurns (–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–ª–µ—Ç–∫–∏ + —Å–∏–º–≤–æ–ª –∏–≥—Ä–æ–∫–∞). ‚úî –ú–µ–Ω—è–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ (–µ—Å–ª–∏ –±—ã–ª X, —Ç–µ–ø–µ—Ä—å O –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç). ‚úî –ë–ª–æ–∫–∏—Ä—É–µ—Ç —Ö–æ–¥—ã, –µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—å (winner).

üîπ 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è (checkWinner)
jsx
const checkWinner = useCallback(() => {
   const board = Array(3).fill(null).map(() => Array(3).fill(null));

   for (const turn of gameTurns) {
      const { row, col } = turn.square;
      board[row][col] = turn.player;
   }

   const winningCombinations = [
      [board[0][0], board[0][1], board[0][2]],
      [board[1][0], board[1][1], board[1][2]],
      [board[2][0], board[2][1], board[2][2]],
      [board[0][0], board[1][0], board[2][0]],
      [board[0][1], board[1][1], board[2][1]],
      [board[0][2], board[1][2], board[2][2]],
      [board[0][0], board[1][1], board[2][2]],
      [board[0][2], board[1][1], board[2][0]],
   ];

   for (const combination of winningCombinations) {
      if (combination.every((cell) => cell === 'X')) {
         setWinner('X'); // –ü–æ–±–µ–¥–∏–ª X
         return;
      }
      if (combination.every((cell) => cell === 'O')) {
         setWinner('O'); // –ü–æ–±–µ–¥–∏–ª O
         return;
      }
   }

   if (gameTurns.length === 9 && !winner) {
      setWinner('–ù–∏—á—å—è'); // –ï—Å–ª–∏ –≤—Å–µ –∫–ª–µ—Ç–∫–∏ –∑–∞–Ω—è—Ç—ã –∏ –Ω–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
   }
}, [gameTurns]);
‚úî –ó–∞–ø–æ–ª–Ω—è–µ—Ç –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏ —Ö–æ–¥–æ–≤ (gameTurns). ‚úî –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–±–µ–¥–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ (–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ, –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ, –¥–∏–∞–≥–æ–Ω–∞–ª–∏). ‚úî –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è (X –∏–ª–∏ O) –∏–ª–∏ –Ω–∏—á—å—é.

üîπ 6. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–±–µ–¥—ã (useEffect)
–ö–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ –¥–µ–ª–∞–µ—Ç —Ö–æ–¥, –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è checkWinner() –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–±–µ–¥—ã:

jsx
useEffect(() => {
   checkWinner();
}, [gameTurns, checkWinner]);
‚úî –í—ã–∑—ã–≤–∞–µ—Ç checkWinner() –∫–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ gameTurns –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è. ‚úî –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω —Å useCallback, —á—Ç–æ–±—ã –Ω–µ –≤—ã–∑—ã–≤–∞—Ç—å –ª–∏—à–Ω–∏–µ —Ä–µ—Ä–µ–Ω–¥–µ—Ä—ã.

üîπ 7. –°–±—Ä–æ—Å –∏–≥—Ä—ã (resetGame)
–ï—Å–ª–∏ –∏–≥—Ä–æ–∫–∏ —Ö–æ—Ç—è—Ç –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æ:

jsx
function resetGame() {
   setGameTurns([]); // –û—á–∏—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Ö–æ–¥–æ–≤
   setActivePlayer('X'); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç X –∫–∞–∫ –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
   setWinner(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
}
‚úî –£–¥–∞–ª—è–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Ö–æ–¥–æ–≤ (gameTurns). ‚úî –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–∞ X. ‚úî –£–±–∏—Ä–∞–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è (winner).

üîπ 8. –†–∞–∑–º–µ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (return)
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç App.jsx —Ä–µ–Ω–¥–µ—Ä–∏—Ç –≤—Å—ë –Ω–∞ —ç–∫—Ä–∞–Ω:

jsx
return (
   <div className='app'>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏–≥—Ä—ã */}
      <header className='header'>
         <h1>Tic-Tac-Toe</h1>
      </header>

      <main>
         <div id='game-container'>
            {/* –ë–ª–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ */}
            <div className='players-container'>
               <Player
                  name={playerNames.X}
                  symbol='X'
                  isActive={activePlayer === 'X'}
                  onChangeName={handleChangeName}
               />
               <Player
                  name={playerNames.O}
                  symbol='O'
                  isActive={activePlayer === 'O'}
                  onChangeName={handleChangeName}
               />
            </div>

            {/* –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ */}
            <GameBoard onSelectSquare={handleSelectSquare} turns={gameTurns} />

            {/* –ñ—É—Ä–Ω–∞–ª —Ö–æ–¥–æ–≤ */}
            <Log turns={gameTurns} />
         </div>

         {/* –≠–∫—Ä–∞–Ω –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã */}
         {winner && (
            <div className='game-over'>
               <h2>{winner === '–ù–∏—á—å—è' ? '–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞: –ù–∏—á—å—è!' : `–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: ${winner}`}</h2>
            </div>
         )}

         {/* –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –∏–≥—Ä—ã */}
         <button className='reset-btn' onClick={resetGame}>–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ</button>
      </main>
   </div>
);
‚úî –†–µ–Ω–¥–µ—Ä–∏—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏–≥—Ä—ã (Tic-Tac-Toe). ‚úî –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–≥—Ä–æ–∫–æ–≤, –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –∏ –∂—É—Ä–Ω–∞–ª —Ö–æ–¥–æ–≤. ‚úî –í—ã–≤–æ–¥–∏—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è, –µ—Å–ª–∏ –∏–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (winner). ‚úî –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏–≥—Ä—É (resetGame).

üéØ –ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç—ã App.jsx
‚úÖ –°–ª–µ–¥–∏—Ç –∑–∞ —Ö–æ–¥–∞–º–∏ (gameTurns) –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è (checkWinner) 
‚úÖ –ú–µ–Ω—è–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ö–æ–¥–∞ 
‚úÖ –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–≥—Ä–æ–∫–∞–º –º–µ–Ω—è—Ç—å —Å–≤–æ—ë –∏–º—è 
‚úÖ –í—ã–≤–æ–¥–∏—Ç –∏—Å—Ç–æ—Ä–∏—é —Ö–æ–¥–æ–≤ –≤ Log.jsx 
‚úÖ –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∏–ª–∏ –Ω–∏—á—å—é 
‚úÖ –ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–±—Ä–æ—Å–∏—Ç—å –∏–≥—Ä—É –∏ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ